this function is for writing out a single
test comparison json, when using screenshots in a single test



public void writeToJsonFile(AbstractSingleScreenShot sample, String testDescription) throws IOException {
        
        synchronized (this) {
            final String jsonFileStr = JSON_FOLDER_LOCATION + "testimage_metadata.json";

            String goldFileStr
                    = FileUtils.toFile(getClass()
                            .getResource(sample.classPathToGoldFile())).toString();

        //gold file needs to be set to .. target/
            goldFileStr = "target" + goldFileStr.split("target")[1];

            String newImageFilePath = sample.fullPathToNewImageFilePath();
            String compareFileString = sample.fullPathToWriteComparisonResultsFile();
         // window.location.origin+window.location.pathname.split("target")[0] has a slash at the end
            // 

            String mergeTemplate
                    = "{\n"
                    + "\"testDescription\": \"%s\",\n"
                    + "\"goldFile\": \"%s\",\n"
                    + "\"newImageFile\": \"%s\",\n"
                    + "\"compareFile\": \"%s\" \n" + "}";

            String mergeResults
                    = String.format(mergeTemplate, testDescription, goldFileStr,
                            newImageFilePath, compareFileString);

            final File jsonFile2 = new File(jsonFileStr);
            String jsonData;

            SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
            String dateStr = sdf.format(new Date());
            ObjectMapper m = new ObjectMapper();
            ObjectNode json = (ObjectNode) m.readTree(jsonFile2);

            json.put("date", dateStr);
            ArrayNode arrayData = (ArrayNode) json.get(JSON_TEST_DATA_FIELD);

            JsonNode newThing = m.readValue(mergeResults, JsonNode.class);

            arrayData.add(newThing);

            jsonData
                    = m.writerWithDefaultPrettyPrinter()
                    .writeValueAsString(json);
            LOG.info("writing comparison " + jsonFile2.getAbsolutePath());
            FileUtils.writeStringToFile(jsonFile2, jsonData);

            final String jsFileStr = JSON_FOLDER_LOCATION + "testimage_metadata.js";

            final File jsFile = new File(jsFileStr);
            if (jsonData == null) {
                jsonData = "null;";
            }
            FileUtils.writeStringToFile(jsFile, "var " + JSON_TEST_DATA_FIELD + " = \n" + jsonData);
        }
    }